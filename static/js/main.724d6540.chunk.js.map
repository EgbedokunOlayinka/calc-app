{"version":3,"sources":["custom-button/custom-button.component.jsx","display-container/display-container.component.jsx","RefText.jsx","App.js","index.js"],"names":["CustomButton","children","value","classProp","mainFunc","className","onClick","DisplayContainer","upperDisplay","lowerDisplay","displayValue","displayResult","resetDisplay","renderButton","char","RefText","name","App","useState","setUpperDisplay","setLowerDisplay","isEvaluated","setIsEvaluated","resultDisplay","setResultDisplay","operators","numbers","prevLower","includes","length","prevUpper","expression","substring","result","evaluate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.724d6540.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './custom-button.styles.scss';\r\n\r\nconst CustomButton = ({ children, value, classProp, mainFunc }) => {\r\n    return (\r\n        <button className={classProp} onClick={() => mainFunc(value)}>\r\n            { children }\r\n        </button>\r\n)\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\nimport './display-container.styles.scss';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nconst DisplayContainer = ({ upperDisplay, lowerDisplay, displayValue, displayResult, resetDisplay }) => {\r\n\r\n    const renderButton = (value, classProp, char, mainFunc) => {\r\n        return (\r\n        <CustomButton classProp={classProp} value={value} mainFunc={mainFunc}>\r\n            { char }\r\n        </CustomButton>\r\n        )\r\n    }  \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <p className=\"upper-display\">\r\n                { upperDisplay }\r\n            </p>\r\n            <p className=\"lower-display\">\r\n                { lowerDisplay }\r\n            </p>\r\n\r\n            <div className=\"sub-container\">\r\n                { renderButton('AC', 'reset red', 'AC', resetDisplay) }\r\n                { renderButton('/', 'divide light', '/', displayValue) }\r\n                { renderButton('*', 'multiply light', 'X', displayValue) }\r\n                { renderButton('7', 'seven dark', '7', displayValue) }\r\n                { renderButton('8', 'eight dark', '8', displayValue) }\r\n                { renderButton('9', 'nine dark', '9', displayValue) }\r\n                { renderButton('-', 'minus light', '-', displayValue) }\r\n                { renderButton('4', 'four dark', '4', displayValue) }\r\n                { renderButton('5', 'five dark', '5', displayValue) }\r\n                { renderButton('6', 'six dark', '6', displayValue) }\r\n                { renderButton('+', 'plus light', '+', displayValue) }\r\n                { renderButton('1', 'one dark', '1', displayValue) }\r\n                { renderButton('2', 'two dark', '2', displayValue) }\r\n                { renderButton('3', 'three dark', '3', displayValue) }\r\n                { renderButton('=', 'equals blue', '=', displayResult) }\r\n                { renderButton('0', 'zero dark', '0', displayValue) }\r\n                { renderButton('.', 'dot dark', '.', displayValue) }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayContainer;\r\n","import React from 'react';\r\n\r\nconst RefText = ({ name }) => (\r\n    <p className=\"ref\">\r\n        { `Coded by ${name}` }\r\n    </p>\r\n);\r\n\r\nexport default RefText;","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { evaluate } from 'mathjs';\n\nimport DisplayContainer from './display-container/display-container.component';\nimport RefText from './RefText';\n\n\nconst App = () => {\n  const [upperDisplay, setUpperDisplay] = useState('');\n  const [lowerDisplay, setLowerDisplay] = useState('0');\n  const [isEvaluated, setIsEvaluated] = useState(false);\n  const [resultDisplay, setResultDisplay] = useState('');\n\n  const displayValue = (value) => {\n    const operators = ['+', '-', '/', '*'];\n    const numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\n    return setLowerDisplay(prevLower => {\n      // if a result has been gotten\n      if(isEvaluated) {\n        // if next input is a number\n        if(numbers.includes(value)) {\n          setUpperDisplay(value);\n          setIsEvaluated(false);\n          return value;\n        }\n\n        // if next input is an operator\n        if(operators.includes(value)) {\n          setUpperDisplay(`${resultDisplay}${value}`);\n          setIsEvaluated(false);\n          return value;\n        }\n\n        //if next input is a dot\n        if(value === '.') {\n          setUpperDisplay('0.');\n          setIsEvaluated(false);\n          return '0.'\n        }\n      };\n\n      // if current lower display length is 20 already\n      if(numbers.includes(value) && prevLower.length >= 20) {\n        setUpperDisplay(prevUpper => prevUpper);\n        setIsEvaluated(false);\n        return prevLower;\n      }\n\n      // if value is a number or operator and the initial state is 0\n      if( (numbers.includes(value) || operators.includes(value) ) && prevLower === '0') {\n        setUpperDisplay(value);\n        setIsEvaluated(false);\n        return value;\n      };\n\n      // if value is a number and initial state is not 0\n      if(numbers.includes(value) && prevLower !== '0') {\n        setUpperDisplay(prevUpper => `${prevUpper}${value}`);\n        setIsEvaluated(false);\n        if(operators.includes(prevLower)) return value;\n        return `${prevLower}${value}`;\n      }\n\n      // if value is an operator and initial state is not 0\n      if(operators.includes(value) && prevLower !== '0') {\n        // let newValue = `${prevLower}${value}`;\n        if(operators.includes(prevLower)) {\n          setUpperDisplay(prevUpper => prevUpper);\n          setIsEvaluated(false);\n          return prevLower;\n        }\n\n        setUpperDisplay(prevUpper => `${prevUpper}${value}`);\n        setIsEvaluated(false);\n        return value;\n      }\n\n      // if value is a dot and initial state is 0\n      if(value === '.' && prevLower === '0') {\n        setUpperDisplay('0.');\n        setIsEvaluated(false);\n        return '0.';\n      }\n\n      // if value is a dot and initial state is not 0\n      if(value === '.' && prevLower !== '0') {\n        // setUpperDisplay(prevUpper => `${prevUpper}${value}`);\n        setIsEvaluated(false);\n\n        if(operators.includes(prevLower)) {\n          setUpperDisplay(prevUpper => `${prevUpper}0${value}`);\n          return `0${value}`;\n        }\n\n        if(prevLower === '0.' || prevLower.includes('.') ) {\n          setUpperDisplay(prevUpper => prevUpper)\n          return prevLower;\n        }\n\n        setUpperDisplay(prevUpper => `${prevUpper}${value}`);\n        return `${prevLower}${value}`;\n\n      }\n\n    });\n  };\n\n  const displayResult = () => {\n    const operators = ['+', '-', '/', '*'];\n\n    return setUpperDisplay(prevUpper => {\n      let expression;\n      if(operators.includes(prevUpper[prevUpper.length-1])) {\n        expression = prevUpper.substring(0, prevUpper.length-1);\n      } else {\n        expression = prevUpper.substring(0);\n      }\n\n      let result = evaluate(expression);\n      setLowerDisplay(result);\n      setIsEvaluated(true);\n      setResultDisplay(result);\n      return `${expression}=${result}`;\n    });\n  };\n\n  const resetDisplay = () => {\n    setUpperDisplay('');\n    setLowerDisplay('0');\n    setIsEvaluated(false);\n    setResultDisplay('');\n  };\n\n\n  return (\n    <div className=\"page-wrapper\">\n      <DisplayContainer \n      upperDisplay={upperDisplay}\n      lowerDisplay={lowerDisplay}\n      displayValue={displayValue}  \n      displayResult={displayResult}\n      resetDisplay={resetDisplay}\n      />\n\n      <RefText name='Egbedokun Olayinka' />\n    </div>\n    \n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}